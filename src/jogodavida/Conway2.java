package jogodavida;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Timer;
import java.util.TimerTask;
/**
 *
 * @author davidfernandes
 */
public class Conway2 extends javax.swing.JFrame {

    final int wid = 50, hei=20;
    boolean[][] currentMove = new boolean [hei][wid];
    boolean[][] nextMove = new boolean [hei][wid];
    boolean play;
    Image offScrimg;
    Graphics offScrGraph;
    /**
     * Creates new form Conway2
     */
    public Conway2() {
        initComponents();
        offScrimg = createImage(painel.getWidth(), painel.getHeight());
        offScrGraph = offScrimg.getGraphics();
        Timer time = new Timer();
        TimerTask task = new TimerTask(){
            @Override
            
        public void run(){
                if (play){
                    for(int i =0; i< hei; i++){
                        for(int j=0; j< wid; j++){ 
                           nextMove[i][j] = decide(i,j);
                        }
                        
                    }
                    
                    for(int i = 0; i<hei; i++){
                        for(int j=0;j<wid; j++){
                            currentMove[i][j] = nextMove[i][j];
                        }
                }
                    paint();
            }
                
        }
                };
        time.scheduleAtFixedRate(task, 0, 100);
        paint();
}    
    private boolean decide(int i, int j){
            int vizinhos = 0;
            if(j>0){
                if(currentMove[i][j-1]){
                    vizinhos++;
                }
                if(i>0){
                    if(currentMove[i-1][j-1]){
                        vizinhos++;
                    }
                }
                if(i < hei-1){
                    
                    if(currentMove[i+1][j-1]){
                        vizinhos++;
                    }
                
            }
            }
            if(j<wid-1){
                if(currentMove[i][j+1]){
                    vizinhos++;
                }
                if(i>0){
                    if(currentMove[i-1][j+1]){
                        vizinhos++;
                    }
                }
            if(i > hei -1){
                if(currentMove[i+1][j-1]){
                        vizinhos++;
                    }
                }
            }
            if(i>0){
                if(currentMove[i-1][j]){
                    vizinhos++;
                }
            if(i<hei-1){
                if(currentMove[i+1][j]){
                        vizinhos++;
                    }
            if(vizinhos==3){                
                        return true;
                    }
                if(currentMove[i][j] && vizinhos==2){
                        return true;
                    }
                    
                }
            }
            return false;
        }
    private void paint(){
        
        offScrGraph.setColor(painel.getBackground());
        offScrGraph.fillRect(0,0,painel.getWidth(), painel.getHeight());
        
        for(int i=0; i<hei; i++){
            for(int j =0; j<wid; j++){
                if(currentMove[i][j]){
                    offScrGraph.setColor(Color.YELLOW);
                    
                    int x = j * painel.getWidth()/ wid;
                    int y = i * painel.getHeight()/ hei;
                    offScrGraph.fillRect(x, y, painel.getWidth() /wid, i*painel.getHeight() /hei);
                }
            }
        }
        
        offScrGraph.setColor(Color.BLACK);
        for(int i =1; i< hei; i++){
            int y = i*painel.getHeight()/hei;
            offScrGraph.drawLine(0, y, painel.getWidth(), y);
        }
        for(int j=1; j<wid; j++){
            int x =j*painel.getWidth()/wid;
            offScrGraph.drawLine(x, 0, x, painel.getHeight());
        }
        painel.getGraphics().drawImage(offScrimg, 0, 0, painel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        start = new javax.swing.JButton();
        erase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));

        painel.setBackground(new java.awt.Color(0, 102, 102));
        painel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelMouseClicked(evt);
            }
        });
        painel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                painelComponentResized(evt);
            }
        });

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );

        start.setText("START");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        erase.setText("ERASE GAME");
        erase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 416, Short.MAX_VALUE)
                .addComponent(erase)
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erase, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void painelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseClicked
       
        int j = wid * evt.getX() / painel.getWidth();
        int i = hei * evt.getY() / painel.getHeight();
        currentMove[i][j] = !currentMove[i][j];
        paint();
    }//GEN-LAST:event_painelMouseClicked

    private void painelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_painelComponentResized
        offScrimg = createImage(painel.getWidth(), painel.getHeight());
        offScrGraph = offScrimg.getGraphics();
        paint();
    }//GEN-LAST:event_painelComponentResized

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        play = !play;
        if(play){
            start.setText("PAUSE");
        }
        else{
            start.setText("START");
        }
        paint();
    }//GEN-LAST:event_startActionPerformed

    private void eraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseActionPerformed
        currentMove = new boolean [hei][wid];
        paint();
    }//GEN-LAST:event_eraseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conway2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conway2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conway2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conway2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conway2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton erase;
    private javax.swing.JPanel painel;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables
}
